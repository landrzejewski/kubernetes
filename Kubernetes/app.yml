apiVersion: v1
kind: ConfigMap
metadata:
  namespace: training
  name: postgres-config-map
data:
  POSTGRES_USER: "admin"
  POSTGRES_PASSWORD: "admin"
  POSTGRES_DB: "training"
---
apiVersion: v1
kind: PersistentVolume
metadata:
  namespace: training
  name: postgres-persistence-volume
spec:
  hostPath:
    path: /tmp/postgres
  capacity:
    storage: 10G
  accessModes:
    - ReadWriteOnce
  storageClassName: fast
---
apiVersion: v1
kind: PersistentVolumeClaim
metadata:
  namespace: training
  name: postgres-persistence-volume-claim
spec:
  resources:
    requests:
      storage: 5G
  accessModes:
    - ReadWriteOnce
  storageClassName: fast  
---
apiVersion: v1
kind: Pod
metadata:
  namespace: training
  name: postgres-pod
  labels:
    app-name: postgres
spec:
  nodeSelector:
    storage: "true"
  containers:
    - name: postgres
      image: postgres:17-alpine
      ports:
        - containerPort: 5432
          name: db
      envFrom:
        - configMapRef:
            name: postgres-config-map
      volumeMounts:
        - name: data
          mountPath: /var/lib/postgresql/data
        - name: init-scripts
          mountPath: /docker-entrypoint-initdb.d
  volumes:
    - name: data
      persistentVolumeClaim:
        claimName: postgres-persistence-volume-claim
    - name: init-scripts
      hostPath:
        path: /tmp/postgres-scripts
---
apiVersion: v1
kind: Service
metadata:
  namespace: training
  name: postgres-service
spec:
  selector:
    app-name: postgres
  ports:
    - port: 5432
      targetPort: db
---
apiVersion: apps/v1
kind: Deployment
metadata:
  namespace: training
  name: users-deployment
  annotations:
    kubernetes.io/change-cause: "initial release"
spec:
  replicas: 3
  selector:
    matchLabels:
      app-name: users
  template:
    metadata:
      namespace: training
      labels:
        app-name: users
    spec:
      containers:
        - name: users
          image: landrzejewski/users:latest
          ports:
            - containerPort: 3000
              name: http
          resources:
            requests:
              memory: 64M
              cpu: "250m"
            limits:
              memory: 128M
              cpu: "500m"
---
apiVersion: v1
kind: Service
metadata:
  namespace: training
  name: users-server-svc
spec:
  selector:
    app-name: users
  ports:
    - port: 80
      targetPort: http
---
apiVersion: autoscaling/v2
kind: HorizontalPodAutoscaler
metadata:
  namespace: training
  name: users-autoscaler
spec:
  minReplicas: 1
  maxReplicas: 10
  scaleTargetRef:
    kind: Deployment
    name: users-deployment
    apiVersion: apps/v1
  metrics:
    - type: Resource
      resource:
        name: cpu
        target:
          type: Utilization
          averageUtilization: 40